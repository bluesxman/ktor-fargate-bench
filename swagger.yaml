swagger: "2.0"
info:
  description: "Movies"
  version: "1.0.0"
  title: "Movies API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "tva51g3smg.execute-api.us-east-1.amazonaws.com/default"
basePath: "/"
tags:
- name: "movies"
  description: "Everything about movies"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "https"
x-amazon-apigateway-request-validators:
  basic:
    validateRequestBody: true
    validateRequestParameters: true
base-endpoint: &base-endpoint
  x-amazon-apigateway-integration:
    uri: ${lambda_invoke_arn}
    passthroughBehavior: "never"
    httpMethod: "POST"
    type: "aws"
  x-amazon-apigateway-auth:
    type: "NONE"
  x-amazon-apigateway-request-validator: basic
paths: 
  /movies/queryYear/{year}:
    get:
      <<: *base-endpoint
      tags:
      - "movies"
      summary: "Query all movies for a year"
      description: ""
      operationId: "queryYear"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: path
        name: "year"
        type: integer
        description: "The year the movie was released"
        required: true
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/MoviesListing"
        "405":
          description: "Invalid input"
  /movies/queryTitles:
    post:
      <<: *base-endpoint
      tags:
      - "movies"
      summary: "Query titles by letter for a year"
      description: ""
      operationId: "queryTitlesForYear"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Search titles by year"
        required: true
        schema:
          $ref: "#/definitions/TitlesQuery"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/MoviesListing"
        "400":
          description: "Invalid Query"
  /movie/getByTitle:
    post:
      <<: *base-endpoint
      tags:
      - "movies"
      summary: "Get by title"
      description: "Get a single movie by its title"
      operationId: "getByTitle"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Title of the movie"
        required: true
        schema:
          $ref: "#/definitions/SingleTitleGet"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Movie"
        "400":
          description: "Invalid Order"
definitions:
  SingleTitleGet:
    type: "object"
    properties:
      title:
        type: "string"
  TitlesQuery:
    type: "object"
    properties:
      year:
        type: "integer"
        format: "int32"
      firstLetter:
        type: "string"
      lastLetter:
        type: "string"
  MoviesListing:
    type: "array"
    items:
      $ref: "#/definitions/Movie"
  Movie:
    type: "object"
    properties:
      year:
        type: "integer"
        format: "int32"
      title:
        type: "string"
      info:
        $ref: "#/definitions/Info"
  Info:
    type: "object"
    properties:
      directors:
        type: "array"
        items:
          type: "string"
      release_date: 
        type: "string"
      rating:
        type: "number"
      genres:
        type: "array"
        items:
          type: "string"
      image_url:
        type: "string"
      plot:
        type: "string"
      rank:
        type: "integer"
        format: "int32"
      running_time_secs:
        type: "integer"
        format: "int32"
      actors:
        type: "array"
        items:
          type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"